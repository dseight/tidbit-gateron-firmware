#include <dt-bindings/i2c/i2c.h>
#include <dt-bindings/pinctrl/rpi-pico-rp2040-pinctrl.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <zephyr/dt-bindings/input/keymap.h>

/ {
	aliases {
		/*
		 * rp2040_zero has a single on-board led, which has "led-strip" alias.
		 * Redefine it as just "led" to reduce confusion.
		 */
		/delete-property/ led-strip;
		numlock-led = &ws2812;
		underglow-strip = &ws2812_strip;
		keymap = &keymap;
		encoder = &encoder_1_top_row;
	};

	hid_dev_0: hid_dev_0 {
		compatible = "zephyr,hid-device";
		interface-name = "HID0";
		protocol-code = "keyboard";
		in-report-size = <64>;
		in-polling-period-us = <1000>;
	};

	kbd-matrix {
		compatible = "gpio-kbd-matrix";
		row-gpios = <&gpio0  6 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,
			    <&gpio0 12 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,
			    <&gpio0 13 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,
			    <&gpio0 14 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,
			    <&gpio0 15 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
		col-gpios = <&gpio0 2 GPIO_ACTIVE_LOW>,
			    <&gpio0 3 GPIO_ACTIVE_LOW>,
			    <&gpio0 4 GPIO_ACTIVE_LOW>,
			    <&gpio0 5 GPIO_ACTIVE_LOW>;
		col-drive-inactive;
		settle-time-us = <0>;
		no-ghostkey-check;

		keymap: keymap {
			compatible = "input-keymap";
			row-size = <5>;
			col-size = <4>;
			keymap = <
				MATRIX_KEY(0, 1, INPUT_KEY_NUMLOCK)
				MATRIX_KEY(0, 2, INPUT_KEY_KPSLASH)
				MATRIX_KEY(0, 3, INPUT_KEY_KPASTERISK)

				MATRIX_KEY(1, 0, INPUT_KEY_KP7)
				MATRIX_KEY(1, 1, INPUT_KEY_KP8)
				MATRIX_KEY(1, 2, INPUT_KEY_KP9)
				MATRIX_KEY(1, 3, INPUT_KEY_KPMINUS)

				MATRIX_KEY(2, 0, INPUT_KEY_KP4)
				MATRIX_KEY(2, 1, INPUT_KEY_KP5)
				MATRIX_KEY(2, 2, INPUT_KEY_KP6)
				MATRIX_KEY(2, 3, INPUT_KEY_KPPLUS)

				MATRIX_KEY(3, 0, INPUT_KEY_KP1)
				MATRIX_KEY(3, 1, INPUT_KEY_KP2)
				MATRIX_KEY(3, 2, INPUT_KEY_KP3)
				MATRIX_KEY(3, 3, INPUT_KEY_KPENTER)

				MATRIX_KEY(4, 0, INPUT_KEY_BACKSPACE)
				MATRIX_KEY(4, 1, INPUT_KEY_KP0)
				MATRIX_KEY(4, 2, INPUT_KEY_DOT)
				MATRIX_KEY(4, 3, INPUT_KEY_SYSRQ)
			>;
		};
	};

	encoder_1_top_row: encoder_1_top_row {
		compatible = "gpio-qdec";
		gpios = <&gpio0 7 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>,
			<&gpio0 8 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>;
		steps-per-period = <4>;
		sample-time-us = <100>;
		idle-timeout-ms = <100>;
		zephyr,axis = <INPUT_REL_WHEEL>;
	};

	encoder_1: encoder_1 {
		compatible = "gpio-qdec";
		gpios = <&gpio0 7 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>,
			<&gpio0 8 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>;
		steps-per-period = <4>;
		sample-time-us = <100>;
		idle-timeout-ms = <100>;
		status = "disabled";
	};

	encoder_2: encoder_2 {
		compatible = "gpio-qdec";
		gpios = <&gpio0 26 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>,
			<&gpio0 27 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>;
		steps-per-period = <4>;
		sample-time-us = <100>;
		idle-timeout-ms = <100>;
		status = "disabled";
	};

	encoder_3: encoder_3 {
		compatible = "gpio-qdec";
		gpios = <&gpio0 10 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>,
			<&gpio0 11 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>;
		steps-per-period = <4>;
		sample-time-us = <100>;
		idle-timeout-ms = <100>;
		status = "disabled";
	};

	encoder_4: encoder_4 {
		compatible = "gpio-qdec";
		gpios = <&gpio0 28 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>,
			<&gpio0 29 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>;
		steps-per-period = <4>;
		sample-time-us = <100>;
		idle-timeout-ms = <100>;
		status = "disabled";
	};
};

&pinctrl {
	ws2812_pio1_default: ws2812_pio1_default {
		ws2812 {
			pinmux = <PIO1_P9>;
		};
	};
};

&ws2812 {
	/* Color mapping in upstream is wrong */
	color-mapping = <LED_COLOR_ID_RED
			 LED_COLOR_ID_GREEN
			 LED_COLOR_ID_BLUE>;
};

&pio1 {
	status = "okay";

	pio-ws2812 {
		compatible = "worldsemi,ws2812-rpi_pico-pio";
		status = "okay";
		pinctrl-0 = <&ws2812_pio1_default>;
		pinctrl-names = "default";
		bit-waveform = <3>, <3>, <4>;

		ws2812_strip: ws2812 {
			status = "okay";
			gpios = <&gpio0 9 GPIO_ACTIVE_HIGH>;
			chain-length = <8>;
			color-mapping = <LED_COLOR_ID_GREEN
					 LED_COLOR_ID_RED
					 LED_COLOR_ID_BLUE>;
			reset-delay = <400>;
			frequency = <800000>;
		};
	};
};
